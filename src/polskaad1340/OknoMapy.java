/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package polskaad1340;

import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Kuba
 */
public class OknoMapy extends javax.swing.JFrame {

    public int tileSize;
    
    private ArrayList<ArrayList<JLabel>> foregroundTileGrid, backgroundTileGrid;    
    private int defaultBgTileID = 72;
    private boolean isResizedNow = false;

    public ArrayList<ArrayList<JLabel>> getForegroundTileGrid() {
        return foregroundTileGrid;
    }

    public ArrayList<ArrayList<JLabel>> getBackgroundTileGrid() {
        return backgroundTileGrid;
    }

    public JLabel tileFromNumber(int num) {
        String path = "/images/" + num + ".png";

        ImageIcon ii = new ImageIcon(getClass().getResource(path));

        JLabel jl = new JLabel(ii);
        jl.setSize(tileSize, tileSize);
        return jl;
    }

    public void importForegroundTileGrid(ArrayList<ArrayList<Integer>> arr) {
        ArrayList<ArrayList<JLabel>> tileGrid = new ArrayList<>(arr.size());
        for (int i = 0; i < arr.size(); i++) {

            ArrayList<JLabel> tileGridRow = new ArrayList<>(arr.size());

            for (int j = 0; j < arr.size(); j++) {

                int num = arr.get(i).get(j);

                JLabel jl = tileFromNumber(num);
                tileGridRow.add(jl);
            }
            tileGrid.add(tileGridRow);
        }

        this.foregroundTileGrid = tileGrid;
    }

    public void importBackgroundTileGrid(ArrayList<ArrayList<Integer>> arr) {
        ArrayList<ArrayList<JLabel>> tileGrid = new ArrayList<>(arr.size());
        for (int i = 0; i < arr.size(); i++) {

            ArrayList<JLabel> tileGridRow = new ArrayList<>(arr.size());

            for (int j = 0; j < arr.size(); j++) {

                int num = arr.get(i).get(j);

                JLabel jl = tileFromNumber(num);
                tileGridRow.add(jl);
            }
            tileGrid.add(tileGridRow);
        }

        this.backgroundTileGrid = tileGrid;
    }

    public ArrayList<ArrayList<JLabel>> createTileGrid(int size, int defaultTileNo) {
        ArrayList<ArrayList<JLabel>> tileGrid = new ArrayList<>(size);
        for (int i = 0; i < size; i++) {

            ArrayList<JLabel> tileGridRow = new ArrayList<>(size);

            for (int j = 0; j < size; j++) {

                int num = defaultTileNo;
                if (defaultTileNo == -1) {
                    num = i * size + j;
                } //wszystkie obrazy po kolei

                JLabel jl = tileFromNumber(num);
                tileGridRow.add(jl);
            }
            tileGrid.add(tileGridRow);
        }
        return tileGrid;
    }

    private void addTileGridToWindow(ArrayList<ArrayList<JLabel>> tileGrid, JPanel targetPanel) {
        int size = tileGrid.size();

        GridLayout gl = (GridLayout) targetPanel.getLayout();
        if (tileGrid.size() > 0) {
            gl.setRows(tileGrid.size());
            gl.setColumns(tileGrid.size());
            targetPanel.setSize(size * tileSize, size * tileSize);
        }

        for (int i = 0; i < tileGrid.size(); i++) {
            ArrayList<JLabel> arrayList = tileGrid.get(i);
            for (int j = 0; j < arrayList.size(); j++) {               
                targetPanel.add(arrayList.get(j));
            }
        }
    }

    public JLabel getTileAt(ArrayList<ArrayList<JLabel>> tileGrid, int tiledX, int tiledY) {
        return (tileGrid.get(tiledY)).get(tiledX);
    }

    public void setTileAt(ArrayList<ArrayList<JLabel>> tileGrid, int tiledX, int tiledY, JLabel jl) {
        tileGrid.get(tiledY).set(tiledX, jl);
    }

    public OknoMapy() {
        initComponents();
        this.tileSize = 32;
        addTileGridToWindow(createTileGrid(100, defaultBgTileID), overallBackgroundPanel);
        drawForm();
    }

    public void drawForm() {
        isResizedNow=true;
        
        if (foregroundTileGrid != null) {
            addTileGridToWindow(foregroundTileGrid, foregroundPanel);
        }

        if (backgroundTileGrid != null) {
            addTileGridToWindow(backgroundTileGrid, backgroundPanel);
        }

        isResizedNow=false;
    }

    public void setForegroundTileGrid(ArrayList<ArrayList<JLabel>> foregroundTileGrid) {
        this.foregroundTileGrid = foregroundTileGrid;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        foregroundPanel = new javax.swing.JPanel();
        backgroundPanel = new javax.swing.JPanel();
        overallBackgroundPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 800));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(null);

        foregroundPanel.setOpaque(false);
        foregroundPanel.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(foregroundPanel);
        foregroundPanel.setBounds(0, 0, 100, 100);

        backgroundPanel.setForeground(new java.awt.Color(240, 240, 240));
        backgroundPanel.setOpaque(false);
        backgroundPanel.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(backgroundPanel);
        backgroundPanel.setBounds(0, 0, 10, 10);

        overallBackgroundPanel.setForeground(new java.awt.Color(240, 240, 240));
        overallBackgroundPanel.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(overallBackgroundPanel);
        overallBackgroundPanel.setBounds(0, 0, 620, 410);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        if(!isResizedNow) {
            drawForm();
        }
    }//GEN-LAST:event_formComponentResized

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        int num = evt.getExtendedKeyCode();
        System.out.println(num);
        this.setTileAt(foregroundTileGrid, 0, 0, this.tileFromNumber(num));
        this.repaint();
        this.drawForm();
    }//GEN-LAST:event_formKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JPanel foregroundPanel;
    private javax.swing.JPanel overallBackgroundPanel;
    // End of variables declaration//GEN-END:variables
}
